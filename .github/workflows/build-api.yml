name: Release Bearprint API Binaries

on:
  push:
    tags:
      - 'bearprint-api-v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - { goos: linux, goarch: amd64, name_suffix: linux-amd64 }
          - { goos: linux, goarch: arm64, name_suffix: linux-arm64 }
          - { goos: darwin, goarch: amd64, name_suffix: darwin-amd64 }
          - { goos: darwin, goarch: arm64, name_suffix: darwin-arm64 }
          - { goos: linux, goarch: arm, goarm: '6', name_suffix: linux-armv6 }

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build
        working-directory: ./bearprint-api
        env:
          GOOS: ${{ matrix.target.goos }}
          GOARCH: ${{ matrix.target.goarch }}
          GOARM: ${{ matrix.target.goarm }}
        run: |
          go build -v -ldflags "-X main.version=${VERSION}" \
            -o bearprint-api-${{ matrix.target.name_suffix }} .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bearprint-api-${{ matrix.target.name_suffix }}
          path: ./bearprint-api/bearprint-api-${{ matrix.target.name_suffix }}
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          generate_release_notes: true
          files: |
            artifacts/**/*
